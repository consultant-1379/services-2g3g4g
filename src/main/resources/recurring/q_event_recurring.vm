##=============================================================================
##
## Recurring Event Analysis
## -----------------------------------
##
## Author : eavidat
## Date   : Jan 2011
##=============================================================================

#DEFINE_CONSTANTS()
#SET_GROUP_TYPE($type)

#set($useNonLteTables=true)
#set($useLteTables=true)

#set($columns=[$IMSI])

#if(${groupDefinitions})
#set($groupDef = $groupDefinitions.get($groupType))
#set($groupTable = $groupDef.getTableName())
#set($groupnameColumn = $groupDef.getGroupNameColumn())
#set($joinKeys = $groupDef.getGroupKeys())
#set($isgroup=true)
#else
#set($isgroup=false)
#end

#macro(RAWVIEW_QUERY_FOR_RECUR_EVENT $tablesToUseInQuery)
    ,(
        #foreach ($rawtable in $tablesToUseInQuery)
            select *
            from dc.$rawtable
            where
            #if($isgroup==false)
                #GET_COLUMNS_WHERE_BY_TABLE($rawtable $columns)
                #if ($timerange == "TR_4")
                    and #GET_DATE_RANGE_LOCAL()
                #else
                    #AND_DATETIME_RANGE()
                #end
            #else
                #if ($timerange == "TR_4")
                    #GET_DATE_RANGE_LOCAL()
                #else
                    #GET_DATETIME_RANGE()
                #end
            #end
            and EVENT_RESULT    = :$ApplicationConstants.EVENT_RESULT_PARAM
            and CAUSE_PROT_TYPE = :$ApplicationConstants.CAUSE_PROT_TYPE
            and CAUSE_CODE       = :$CAUSE_CODE
            and SUBCAUSE_CODE   = :$SUBCAUSE_CODE
            #if(!((!$tablesToUseInQuery) && ("$!tablesToUseInQuery" == "")) && $velocityCount < $tablesToUseInQuery.size())
                union all
            #end
        #end
    ) as rawview
#end

#macro(WHERE_ADDON_FOR_RECUR_EVENT)
    and etref.EVENT_ID_DESC = :$ApplicationConstants.EVENT_TYPE_PARAM
    #if($isgroup)
        and #GET_JOIN("rawview" "groupref" $joinKeys)
        and $groupnameColumn = :$ApplicationConstants.GROUP_NAME_PARAM
    #end
#end

#macro(RECUR_EVENT_QUERY $networkType $tablesToUseInQuery)
(   
    #EVENT_ANALYSIS_SELECT($isgroup $ApplicationConstants.EVENT_RECURRING $networkType)

    #EVENT_ANALYSIS_FROM($isgroup $networkType $groupTable)
    #RAWVIEW_QUERY_FOR_RECUR_EVENT($tablesToUseInQuery)

    #EVENT_ANALYSIS_WHERE($type $networkType)
    #WHERE_ADDON_FOR_RECUR_EVENT()
)
#end

select
#if(${key}==$ApplicationConstants.KEY_TYPE_SUM)
    ${paramHeaders},
    count(*) AS 'Occurrences'
#elseif(${key}==$ApplicationConstants.KEY_TYPE_TOTAL)
    #RAW_EVENT_ANALYSIS_COLUMNS_WITH_SYSTEM_COLUMNS_HANDLED($count $isgroup $ApplicationConstants.EVENT_RECURRING)
#end
from (
#if($rawNonLteTables.size() > 0 && $useNonLteTables)
    #RECUR_EVENT_QUERY( $ApplicationConstants.SGEH $rawNonLteTables)
#end
#if($rawLteTables.size() > 0 && $useLteTables)
    #if($rawNonLteTables.size() > 0 && $useNonLteTables)
        union all
    #end
    #RECUR_EVENT_QUERY ($ApplicationConstants.LTE $rawLteTables)
#end
)
RECUR_EVENT_RESULT
#if(${key}==$ApplicationConstants.KEY_TYPE_TOTAL)
    order by DATETIME_ID desc
#end