##=============================================================================
##
## Network Analysis : group failure analysis that goes to the raw tables
##
## Description:
##
##    Failure analysis for nominated group
##
## Parameter:
##
## type : one of { APN, TAC, IMSI}
##
## timerange : one of { TR_1, TR_2, TR_3, TR_4}
##
##     TR_1 : normally query against raw events
##     TR_2 : normally query against 1min agg
##     TR_3 : normally query against 15min agg
##     TR_4 : normally query against daily agg
##
## Named PreparedStatement Parameter:
##
##    :dateFrom   starting time
##    :dateTo     ending time
##    :GROUP_NAME nominated group name
##
##=============================================================================
#macro(SELECT_FROM_AGGREGATION_TABLES $tableName)
    select
        EVENT_ID,
        sum(NO_OF_SUCCESSES) as NO_OF_SUCCESSES
    from
        dc.$tableName temp
        #if($isgroup)
            ,$groupTable temp_group
        #end
    where
        #GET_DATETIME_RANGE()
        #if($isgroup)
            and temp_group.$groupnameColumn = :$ApplicationConstants.GROUP_NAME_PARAM
            and #GET_JOIN("temp" "temp_group" $joinKeys)
        #else
            and #GET_COLUMNS_WHERE($columnsForQuery)
        #end
    group by
        EVENT_ID
    having
        EVENT_ID between 0 and 255    ##EVENT_ID is a tinyint in database
#end


#DEFINE_CONSTANTS()
#SET_GROUP_TYPE($type)

#if(${type}==$ApplicationConstants.TYPE_APN)
    #set($columnsToSelect=["APN","EVENT_ID","IMSI","DEACTIVATION_TRIGGER"])
#elseif (${type}==$ApplicationConstants.TYPE_TAC)
    #set($columnsToSelect=["TAC","EVENT_ID","IMSI","DEACTIVATION_TRIGGER"])
#elseif (${type}==$ApplicationConstants.TYPE_IMSI)
    #set($columnsToSelect=["EVENT_ID","IMSI","DEACTIVATION_TRIGGER","RAT"])
#elseif (${type}==$TYPE_BSC||${type}==$TYPE_RNC)
    #set($columnsToSelect=[$RAT,$VENDOR,$BSC,"EVENT_ID","IMSI","DEACTIVATION_TRIGGER"])
#elseif (${type}==$TYPE_CELL)
    #set($columnsToSelect=[$RAT,$VENDOR,$BSC,$CELL,"EVENT_ID","IMSI","DEACTIVATION_TRIGGER"])
#elseif (${type}==$TYPE_SGSN)
    #set($columnsToSelect=[$SGSN,"EVENT_ID","IMSI","DEACTIVATION_TRIGGER"])
#end

#if(${groupDefinitions})
    #set($groupDef = $groupDefinitions.get($groupType))
    #set($groupTable = $groupDef.getTableName())
    #set($groupnameColumn = $groupDef.getGroupNameColumn())
    #set($joinKeys = $groupDef.getGroupKeys())
    #set($isgroup=true)
#else
    #set($isgroup=false)
#end 

#set($sucViewName="suc")
#set($errViewName="err")
#set($nonDtPdpTables=[$ApplicationConstants.EVENT_E_LTE_TPNAME, $ApplicationConstants.EVENT_E_SGEH_TPNAME])

#set($nondtpdptechpacks=[$ApplicationConstants.EVENT_E_SGEH_TPNAME, $ApplicationConstants.EVENT_E_LTE_TPNAME])
select
    :$ApplicationConstants.GROUP_NAME_PARAM as SYS_COL_$groupnameColumn ,
    isnull(err.EVENT_ID,suc.EVENT_ID) as SYS_COL_EVENT_ID,
    isnull(etref.EVENT_ID_DESC,lteEventType.EVENT_ID_DESC) as EVENT_ID_DESC,
    sum(isnull(NO_OF_ERRORS, 0)) as NO_OF_ERRORS,
    sum(isnull(NO_OF_SUCCESSES,0)) as NO_OF_SUCCESSES,
    NO_OF_ERRORS+NO_OF_SUCCESSES as OCCURRENCES,
    #CALCULATE_KPI_RATIO() AS KPI,
    sum(isnull(NO_OF_TOTAL_ERR_SUBSCRIBERS, 0)) as NO_OF_TOTAL_ERR_SUBSCRIBERS
from
    (select
        EVENT_ID,
        count(*),
        sum(case when (DEACTIVATION_TRIGGER != 1) then 1 else 0 end),
        count(distinct(temp_err.IMSI))
    from
        #if($groupname.equalsIgnoreCase($ApplicationConstants.EXCLUSIVE_TAC_GROUP_NAME))
            #REPLACE_RAW_VIEW_WITH_RAW_TABLES_AND_SPECIFY_COLUMNS($TECH_PACK_LIST.getAllRawErrTablesForTechPacks($nondtpdptechpacks) "temp_err" $columnsToSelect)
        #else
            #REPLACE_RAW_VIEW_WITH_RAW_TABLES_WITH_TAC_EXCLUSION_SPECIFY_COLUMNS($TECH_PACK_LIST.getAllRawErrTablesForTechPacks($nondtpdptechpacks) "temp_err" $columnsToSelect)
        #end
        ,$groupTable temp_group
        where
            temp_group.$groupnameColumn = :$ApplicationConstants.GROUP_NAME_PARAM
            and #GET_JOIN("temp_err" "temp_group" $joinKeys)
    group by
        EVENT_ID 
    ) as err (
        EVENT_ID, NO_OF_ERRORS, NO_OF_NET_INIT_DEACTIVATES, NO_OF_TOTAL_ERR_SUBSCRIBERS)
    full outer join
    (select
        EVENT_ID,
        SUM(NO_OF_SUCCESSES)
    from
        (
            #foreach ($aggTable in $TECH_PACK_LIST.getSucAggregationViewsForTechPacks($nonDtPdpTables))
                #if ( $velocityCount > 1)
                    union all
                #end
                #SELECT_FROM_AGGREGATION_TABLES($aggTable)
            #end
            )as temp_suc
    group by
        EVENT_ID
    ) as suc (
        EVENT_ID, NO_OF_SUCCESSES)
    on (
        #GET_JOIN("suc" "err" ["EVENT_ID"])
    )
    left outer join
        dc.DIM_E_SGEH_EVENTTYPE etref
    on(
        #GET_MULTI_JOIN(["suc","err"] "etref" ["EVENT_ID"])
    )
    left outer join
        dc.DIM_E_LTE_EVENTTYPE lteEventType
    on(
        #GET_MULTI_JOIN(["suc","err"] "lteEventType" ["EVENT_ID"])
    )
group by
    SYS_COL_$groupnameColumn,
    SYS_COL_EVENT_ID,
    EVENT_ID_DESC
having
    SYS_COL_EVENT_ID between 0 and 255
    ##EVENT_ID is a tinyint in database
    
