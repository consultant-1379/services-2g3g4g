##
## Device Analysis - device group summary drilldown
## See http://atrclin2.athtem.eei.ericsson.se/wiki/index.php/ENIQ_Events_Services_Design_Rules for the design rules
## on exclusive TAC handling that apply to this query
##
## Description: 
##
##     Drilldown by device group for summary analysis
##
## Velocity Parameter: 
##
## AGGREGATION_TABLES : a TechPackTables object containing the Aggregation views applicable for time range
## RAW_TABLES : a TechPackTables object containing the Raw tables applicable for this time range
## useAggregationTables : a boolean indicating whether to use the aggregation tables or raw tables 
## for error/success part of the query
##
## Named PreparedStatement Parameters:
##
##    :dateFrom - starting time
##    :dateTo - ending time
##    :groupColumn - group name
##

#macro (SUM_GROUPS_IN_AGGREGATION_VIEW $view $columnToAggregate)
    select
        temp.TAC as TAC,
        sum($columnToAggregate)
    from
        $view temp,
        dc.GROUP_TYPE_E_TAC tacgroup
    where
        #GET_DATETIME_RANGE()
        and
        tacgroup.GROUP_NAME = :groupname
        and temp.TAC = tacgroup.TAC
    group by
        TAC
#end

#DEFINE_CONSTANTS()
#set($columnsToSelectFromRawTables=["TAC"])

select
    isnull(suc.TAC, err.TAC) as TAC,
    isnull(tacref.MANUFACTURER, convert(varchar(12),TAC)) as MANUFACTURER,
    isnull(tacref.Marketing_Name, convert(varchar(12),TAC)) as Marketing_Name,
    sum(isnull(NO_OF_ERRORS, 0)) as NO_OF_ERRORS,
    sum(isnull(NO_OF_SUCCESSES,0)) as NO_OF_SUCCESSES,
    NO_OF_ERRORS+NO_OF_SUCCESSES as OCCURRENCES,
   	#CALCULATE_KPI_RATIO() as SUCCESS_RATIO
from
    (
    #if($useAggregationTables)
        select
            TAC,
            sum(NO_OF_ERRORS) as NO_OF_ERRORS
        from (
        #foreach ($aggView in $AGGREGATION_TABLES.getErrTables())
            #SUM_GROUPS_IN_AGGREGATION_VIEW($aggView "NO_OF_ERRORS")
            #if ( $velocityCount < $AGGREGATION_TABLES.getErrTables().size())
                union all
            #end
        #end
        ) as total_errors(TAC, NO_OF_ERRORS)
        group by
        TAC
    #else
    select
        temp_err.TAC as TAC,
        count(*)
    from
        #if ($timerange=="TR_4")
            #REPLACE_RAW_VIEW_WITH_RAW_TABLES_AND_SPECIFY_COLUMNS_WEEKLY($RAW_TABLES.getErrTables() "temp_err" $columnsToSelectFromRawTables),
        #else
            #REPLACE_RAW_VIEW_WITH_RAW_TABLES_AND_SPECIFY_COLUMNS($RAW_TABLES.getErrTables() "temp_err" $columnsToSelectFromRawTables),
        #end
        dc.GROUP_TYPE_E_TAC tacgroup
    where
        tacgroup.GROUP_NAME = :groupname
        and temp_err.TAC = tacgroup.TAC
    group by
        TAC
    #end
    ) as err(TAC, NO_OF_ERRORS)
    full outer join
    (
    #if($useAggregationTables)
        ##need to sum on the union of the sums from the aggregation tables (otherwise get duplicate results
        ##on joining these results with the success counts from the subquery below)
        select
            TAC,
            sum(NO_OF_SUCCESSES) as NO_OF_SUCCESSES
        from (
        #foreach ($aggView in $AGGREGATION_TABLES.getSucTables())
            #SUM_GROUPS_IN_AGGREGATION_VIEW($aggView "NO_OF_SUCCESSES")
            #if ( $velocityCount < $AGGREGATION_TABLES.getErrTables().size())
                union all
            #end
        #end
        ) as total_successes(TAC, NO_OF_SUCCESSES)
        group by
        TAC
    #else
        #if($useIMSISucRaw)
            select
                suc.TAC as TAC,
                sum(no_of_successes)
            from
                #if ($timerange=="TR_4")
                    #REPLACE_RAW_VIEW_WITH_RAW_TABLES_AND_SPECIFY_COLUMNS_ADJUSTED($TECH_PACK_LIST.getAllRawTablesWithMeasurementType() "suc" ["NO_OF_SUCCESSES", "TAC"]),
                #else
                    #REPLACE_RAW_VIEW_WITH_RAW_TABLES_AND_SPECIFY_COLUMNS($TECH_PACK_LIST.getAllRawTablesWithMeasurementType() "suc" ["NO_OF_SUCCESSES", "TAC"]),
                #end
                dc.GROUP_TYPE_E_TAC tacgroup
            where
                tacgroup.GROUP_NAME = :groupname
                and tacgroup.TAC = suc.TAC
            group by
                TAC
        #else
            select
                suc.TAC as TAC,
                count(*)
            from
            #if ($timerange=="TR_4")
                #REPLACE_RAW_VIEW_WITH_RAW_TABLES_AND_SPECIFY_COLUMNS_WEEKLY($RAW_TABLES.getSucTables() "suc" $columnsToSelectFromRawTables),
            #else
                #REPLACE_RAW_VIEW_WITH_RAW_TABLES_AND_SPECIFY_COLUMNS($RAW_TABLES.getSucTables() "suc" $columnsToSelectFromRawTables),
            #end
                dc.GROUP_TYPE_E_TAC tacgroup
            where
                tacgroup.GROUP_NAME = :groupname
                and tacgroup.TAC = suc.TAC
            group by
                TAC
        #end
    #end
    ) as suc(TAC, NO_OF_SUCCESSES)
    on(
        suc.TAC = err.TAC
    )
    left outer join
        dc.DIM_E_SGEH_TAC tacref
    on(
        tacref.TAC=isnull(suc.TAC, err.TAC)
    )
group by
    TAC,
    tacref.MANUFACTURER,
    tacref.MARKETING_NAME
order by
    OCCURRENCES