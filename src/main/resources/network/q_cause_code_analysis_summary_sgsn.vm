##=============================================================================
##
## Network Analysis : cause code failure analysis
##
## type : {SGSN}
##  
## timerange : one of { TR_1, TR_2, TR_3, TR_4}
##  
##     TR_1 : normally query against raw events
##     TR_2 : normally query against 1min agg
##     TR_3 : normally query against 15min agg
##     TR_4 : normally query against daily agg
##   
## @TODO - refactoring required here - template to split into two new templates, one that queries the raw tables
## and one that queries the aggregation tables.  TechPackTables object should be used to to populate the tables and views, 
## and all business logic to be moved up into the java layer
##=============================================================================

##-----------------------------------------------------------------------------
## define references
##
##-----------------------------------------------------------------------------

#DEFINE_CONSTANTS()

#if(${type}==$TYPE_SGSN)
    #set($columns=[$SGSN])
    #set($sgsnColumn=$SGSN)
#end

## $time must be set prior to aggregate logic as might be rest by #RAW_VIEW()
#set($time = $ApplicationMethods.returnAggregateViewType($timerange))

#set($errTables=$techPackTables.getErrTables())
#set($subscriberCountCols=[$CAUSE_CODE,$SUBCAUSE_CODE,$IMSI])
#set($cptRefForSgeh="dc.DIM_E_SGEH_CAUSE_PROT_TYPE")
#set($cptRefForLte="dc.DIM_E_LTE_CAUSE_PROT_TYPE")
#set($ccRefForSgeh="dc.DIM_E_SGEH_CAUSECODE")
#set($ccRefForLte="dc.DIM_E_LTE_CAUSECODE")
#set($sccRefForSgeh="dc.DIM_E_SGEH_SUBCAUSECODE")
#set($sccRefForLte="dc.DIM_E_LTE_SUBCAUSECODE")
#set($useNonLteTables=true)
#set($useLteTables=true)

##-----------------------------------------------------------------------------
## template body
##
##-----------------------------------------------------------------------------

#macro(CCAS_SINGLE_AGG_SUB_QUERY $columnsToInclude $tableToUseInQuery)
    #foreach ($table in $tableToUseInQuery)
        #if ( $velocityCount > 1)
            union all
        #end
        
        select
        #if ($tableToUseInQuery == $rawNonLteTables)
            '2G/3G' AS technology,
        #else
           '4G' AS technology,
        #end
            CAUSE_PROT_TYPE,
            #GET_COLUMNS_NO_COMMA_TRAILING($columnsToInclude)
        from
            dc.$table
        where
        #if ($timerange == "TR_4")
            #GET_DATE_RANGE_LOCAL()
        #else
            #GET_DATETIME_RANGE()
        #end
        and EVENT_SOURCE_NAME = :$sgsnColumn
        and #GET_TAC_EXCLUSION()
        group by technology,
                    CAUSE_PROT_TYPE,
                    #GET_COLUMNS_NO_COMMA_TRAILING($columnsToInclude)
    #end
#end

#macro(CCAS_SINGLE_AGG_QUERY $errTable $cptTable $ccTable $sccTable $isLte)
(select 
technology,
errAdvice.CAUSE_PROT_TYPE, errAdvice.CAUSE_PROT_TYPE_DESC, errAdvice.CAUSE_CODE, errAdvice.CAUSE_CODE_DESC,CAUSE_CODE_HELP, errAdvice.SUBCAUSE_CODE, errAdvice.SUBCAUSE_CODE_DESC,
errAdvice.NO_OF_ERRORS, errAdvice.SUBCAUSE_CODE_HELP
as ADVICE from(
select
#if($isLte)
'4G' AS technology,
#else
'2G/3G' AS technology,
#end

errRef.CAUSE_PROT_TYPE, CAUSE_PROT_TYPE_DESC, errRef.CAUSE_CODE, CAUSE_CODE_DESC,CAUSE_CODE_HELP, 
errRef.SUBCAUSE_CODE, SUBCAUSE_CODE_DESC, SUBCAUSE_CODE_HELP, sum(isnull(NO_OF_ERRORS, 0)) as NO_OF_ERRORS

    from
        dc.$errTable errRef,
        $ccTable ccref,
        $sccTable sccref,
        $cptTable cptref
    where
        #GET_DATETIME_RANGE()
        and #GET_COLUMNS_WHERE_BY_TABLE("errRef" $columns)
        and errRef.CAUSE_PROT_TYPE *= cptref.CAUSE_PROT_TYPE 
        and errRef.CAUSE_CODE *= ccref.CAUSE_CODE 
        and errRef.SUBCAUSE_CODE *= sccref.SUBCAUSE_CODE 
        and errRef.CAUSE_PROT_TYPE *= ccref.CAUSE_PROT_TYPE
    group by
        technology,
        errRef.CAUSE_CODE,
        CAUSE_CODE_DESC,
        CAUSE_CODE_HELP,
        errRef.SUBCAUSE_CODE,
        SUBCAUSE_CODE_DESC,
        SUBCAUSE_CODE_HELP,
        errRef.CAUSE_PROT_TYPE,
        CAUSE_PROT_TYPE_DESC
        )
        as errAdvice(technology,CAUSE_PROT_TYPE, CAUSE_PROT_TYPE_DESC, CAUSE_CODE, CAUSE_CODE_DESC,CAUSE_CODE_HELP, SUBCAUSE_CODE, SUBCAUSE_CODE_DESC, SUBCAUSE_CODE_HELP, NO_OF_ERRORS)
    )
#end

#macro(CCAS_NONAGG_QUERY $errTable $cptTable $ccTable $sccTable)
(select errAdvice.CAUSE_PROT_TYPE, errAdvice.CAUSE_PROT_TYPE_DESC, errAdvice.CAUSE_CODE, errAdvice.CAUSE_CODE_DESC, errAdvice.CAUSE_CODE_HELP,errAdvice.SUBCAUSE_CODE, errAdvice.SUBCAUSE_CODE_DESC,
errAdvice.NO_OF_ERRORS, NO_OF_TOTAL_ERR_SUBSCRIBERS, errAdvice.SUBCAUSE_CODE_HELP as ADVICE from (

select errRef.CAUSE_PROT_TYPE, cptref.CAUSE_PROT_TYPE_DESC, errRef.CAUSE_CODE, CAUSE_CODE_DESC,CAUSE_CODE_HELP, 
        errRef.SUBCAUSE_CODE, SUBCAUSE_CODE_DESC, SUBCAUSE_CODE_HELP, 
		sum(NO_OF_ERRORS),
        sum(NO_OF_TOTAL_ERR_SUBSCRIBERS)
    from
        #temp_$errTable errRef,
        $ccTable ccref,
        $sccTable sccref,
        $cptTable cptref
    where
           errRef.CAUSE_PROT_TYPE *= cptref.CAUSE_PROT_TYPE 
        and errRef.CAUSE_CODE *= ccref.CAUSE_CODE 
        and errRef.SUBCAUSE_CODE *= sccref.SUBCAUSE_CODE 
        and errRef.CAUSE_PROT_TYPE *= ccref.CAUSE_PROT_TYPE
    group by
        errRef.CAUSE_CODE,
        CAUSE_CODE_DESC,
        CAUSE_CODE_HELP,
        errRef.SUBCAUSE_CODE,
        SUBCAUSE_CODE_DESC,
        SUBCAUSE_CODE_HELP,
        errRef.CAUSE_PROT_TYPE,
        CAUSE_PROT_TYPE_DESC
    )
    as errAdvice(CAUSE_PROT_TYPE, CAUSE_PROT_TYPE_DESC, CAUSE_CODE, CAUSE_CODE_DESC,CAUSE_CODE_HELP, SUBCAUSE_CODE, SUBCAUSE_CODE_DESC, SUBCAUSE_CODE_HELP, NO_OF_ERRORS, NO_OF_TOTAL_ERR_SUBSCRIBERS)
    )
#end

#macro(CREATE_CC_ANALYSIS_TEMP_TABLE $tablesToUseInQuery $table_name_type)
        SELECT
        *
        INTO #temp_$table_name_type
        FROM
        (
            SELECT
            CAUSE_PROT_TYPE ,
            CAUSE_CODE ,
            SUBCAUSE_CODE ,
            count(distinct(IMSI)) as NO_OF_TOTAL_ERR_SUBSCRIBERS,
            sum(NO_OF_ERRORS) as NO_OF_ERRORS
        FROM
            (
            #foreach ($rawtable in $tablesToUseInQuery)
                SELECT
                        CAUSE_PROT_TYPE ,
                        CAUSE_CODE ,
                        SUBCAUSE_CODE ,
                        IMSI ,
                        COUNT(*) AS NO_OF_ERRORS
                FROM
                dc.$rawtable errRef
                WHERE
                    #GET_DATETIME_RANGE()
                    and #GET_COLUMNS_WHERE_BY_TABLE("errRef" $columns)
                    and #GET_TAC_EXCLUSION()
                GROUP BY
                    IMSI,
                    SUBCAUSE_CODE,
                    CAUSE_CODE ,
                    CAUSE_PROT_TYPE
                #if($velocityCount < $tablesToUseInQuery.size())
                    union all
                #end    
            #end
            ) AS temp (CAUSE_PROT_TYPE ,CAUSE_CODE ,SUBCAUSE_CODE ,IMSI ,NO_OF_ERRORS)
            GROUP BY
            CAUSE_PROT_TYPE ,
            CAUSE_CODE ,
            SUBCAUSE_CODE 
            ) AS overall_temp;
#end

begin

#if($useAggregationTables)
declare local temporary table temp_sgsn_cc_scc_imsiCount_from_raw
( technology VARCHAR (10),
  CAUSE_PROT_TYPE SMALLINT NULL,
  CAUSE_CODE smallint NULL,
  SUBCAUSE_CODE smallint NULL,
  imsiCount int NULL );

insert into temp_sgsn_cc_scc_imsiCount_from_raw
(SELECT technology,CAUSE_PROT_TYPE,CAUSE_CODE, SUBCAUSE_CODE, COUNT(DISTINCT(IMSI)) AS imsiCount
    from (

        #if($rawNonLteTables.size() > 0 && $useNonLteTables)
                (
                        #CCAS_SINGLE_AGG_SUB_QUERY($subscriberCountCols $rawNonLteTables)
                )
        #end
        #if($rawLteTables.size() > 0 && $useLteTables)

                #if($rawNonLteTables.size() > 0 && $useNonLteTables)
                        union all
                #end
                (
                        #CCAS_SINGLE_AGG_SUB_QUERY ($subscriberCountCols $rawLteTables)
                )
        #end
        )
        as sub
        group by sub.CAUSE_CODE, sub.SUBCAUSE_CODE,sub.technology,sub.CAUSE_PROT_TYPE);
#end

#if($useAggregationTables)
    #if($csv)
        SET TEMPORARY OPTION Temp_Extract_Name1 = 'csvFileName' ;
    #end
select

    :$sgsnColumn as SYS_COL_EVENT_SOURCE_NAME,
    CAUSE_PROT_TYPE as SYS_COL_CAUSE_PROT_TYPE,
     isnull(CAUSE_PROT_TYPE_DESC, '') as CAUSE_PROT_TYPE_DESC,

    err.CAUSE_CODE as CAUSE_CODE,
    isnull(CAUSE_CODE_DESC, '') as CAUSE_CODE_DESC,
    isnull(CAUSE_CODE_HELP, '') as CAUSE_CODE_HELP,
    err.SUBCAUSE_CODE as SUBCAUSE_CODE,
    isnull(SUBCAUSE_CODE_DESC, '') as SUBCAUSE_CODE_DESC,
    isnull(err.ADVICE, '') as whatnext,
    sum(isnull(NO_OF_ERRORS, 0)) as NO_OF_ERRORS,
    (SELECT imsiCount
           FROM temp_sgsn_cc_scc_imsiCount_from_raw raw
           WHERE raw.CAUSE_CODE = err.CAUSE_CODE
                     AND raw.SUBCAUSE_CODE = err.SUBCAUSE_CODE
                     AND raw.technology = err.technology
                     AND raw.CAUSE_PROT_TYPE = err.CAUSE_PROT_TYPE) AS NO_OF_TOTAL_ERR_SUBSCRIBERS
from (

    #foreach ($errtable in $errTables)

        #if (($errtable.toString().indexOf($ApplicationConstants.SGEH) > -1) && $useNonLteTables)
            #CCAS_SINGLE_AGG_QUERY($errtable $cptRefForSgeh $ccRefForSgeh $sccRefForSgeh false)
        #elseif ($useLteTables)
            #CCAS_SINGLE_AGG_QUERY($errtable $cptRefForLte $ccRefForLte $sccRefForLte true)
        #end

        #if($velocityCount < $errTables.size())
            union all
        #end

    #end

) as err (technology,CAUSE_PROT_TYPE, CAUSE_PROT_TYPE_DESC, CAUSE_CODE, CAUSE_CODE_DESC,CAUSE_CODE_HELP, SUBCAUSE_CODE, SUBCAUSE_CODE_DESC, NO_OF_ERRORS, ADVICE)

group by
    err.CAUSE_CODE,
    CAUSE_CODE_DESC,
    CAUSE_CODE_HELP,
    technology,
    err.SUBCAUSE_CODE,
    SUBCAUSE_CODE_DESC,
    whatnext,
    SYS_COL_CAUSE_PROT_TYPE,
    CAUSE_PROT_TYPE_DESC
order by
    err.CAUSE_CODE,
    CAUSE_CODE_DESC,
    CAUSE_CODE_HELP,
    err.SUBCAUSE_CODE,
    SUBCAUSE_CODE_DESC,
    whatnext,
    SYS_COL_CAUSE_PROT_TYPE,
    CAUSE_PROT_TYPE_DESC;

#else

#if($rawNonLteTables.size() > 0 && $useNonLteTables)
    #CREATE_CC_ANALYSIS_TEMP_TABLE($rawNonLteTables "SGEH_ERR_RAW")
#end

#if($rawLteTables.size() > 0 && $useLteTables)
    #CREATE_CC_ANALYSIS_TEMP_TABLE($rawLteTables "LTE_ERR_RAW")
#end

#if($csv == true)
 SET TEMPORARY OPTION Temp_Extract_Name1 = 'csvFileName' ;
#end

select
   :$column as SYS_COL_$column,
    CAUSE_PROT_TYPE as SYS_COL_CAUSE_PROT_TYPE,
    isnull(CAUSE_PROT_TYPE_DESC, '') as CAUSE_PROT_TYPE_DESC,
    err.CAUSE_CODE as CAUSE_CODE,
    isnull(CAUSE_CODE_DESC, '') as CAUSE_CODE_DESC,
    isnull(CAUSE_CODE_HELP, '') as CAUSE_CODE_HELP,
    err.SUBCAUSE_CODE as SUBCAUSE_CODE,
    isnull(SUBCAUSE_CODE_DESC, '') as SUBCAUSE_CODE_DESC,
    isnull(err.advice, '') as whatnext,
    sum(isnull(err.NO_OF_ERRORS, 0)) as NO_OF_ERRORS,
    sum(isnull(err.NO_OF_TOTAL_ERR_SUBSCRIBERS, 0)) as NO_OF_TOTAL_ERR_SUBSCRIBERS
from (
    #if($rawNonLteTables.size() > 0 && $useNonLteTables)
    (
        #CCAS_NONAGG_QUERY("SGEH_ERR_RAW" $cptRefForSgeh $ccRefForSgeh $sccRefForSgeh)
    )
    #end
        
    #if($rawLteTables.size() > 0 && $useLteTables)
        #if($rawNonLteTables.size() > 0 && $useNonLteTables)
            union all
        #end
    (
        #CCAS_NONAGG_QUERY("LTE_ERR_RAW" $cptRefForLte $ccRefForLte $sccRefForLte)
    )
    #end
) as err (CAUSE_PROT_TYPE, CAUSE_PROT_TYPE_DESC, CAUSE_CODE, CAUSE_CODE_DESC,CAUSE_CODE_HELP, SUBCAUSE_CODE, SUBCAUSE_CODE_DESC, NO_OF_ERRORS, NO_OF_TOTAL_ERR_SUBSCRIBERS, ADVICE)


group by
    err.CAUSE_CODE,
    CAUSE_CODE_DESC,
    CAUSE_CODE_HELP,
    err.SUBCAUSE_CODE,
    SUBCAUSE_CODE_DESC,
    whatnext,
    SYS_COL_CAUSE_PROT_TYPE,
    CAUSE_PROT_TYPE_DESC
order by
    SYS_COL_$column,
    err.CAUSE_CODE,
    CAUSE_CODE_DESC,
    CAUSE_CODE_HELP,
    err.SUBCAUSE_CODE,
    SUBCAUSE_CODE_DESC,
    whatnext,
    SYS_COL_CAUSE_PROT_TYPE,
    CAUSE_PROT_TYPE_DESC;
#end
#if($useAggregationTables)
drop table temp_sgsn_cc_scc_imsiCount_from_raw;
#end
end
