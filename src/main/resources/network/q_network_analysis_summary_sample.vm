##=============================================================================
##
## Network analysis : Event summary
##
## Description:
##
##    event volumns for the whole network or single node
##
## Velocity Paramters:
##
##     summarytype : one of {ERROR_SUMMARY, TOTAL_SUMMARY}
##
##     timerange : one of { TR_1, TR_2, TR_3, TR_4}
##
##         TR_1 : query against raw events
##         TR_2 : query against 1min agg
##         TR_3 : query against 15min agg
##         TR_4 : query against daily agg
##
##     starttime : starting time
##
##     endtime : ending time
##
##     type : one of {BSC, CELL, SGSN}
##
##     node : one of {ALL, SINGLE}
##
##         ALL : the whole network 
##         SINGLE : used together with type
##
## Named Prepared Statement parameters:
##
##    :dateFrom starting point
##    :dateTo   ending point
##    :EVENT_SOURCE_NAME event source name
##    :VENDOR   vendor information for BSC/CELL
##    :HIERARCHY_3 first level topology
##    :HIERARCHY_1 third level topology
##
## Scenarios:
##
##     1. Summary for the whole network
##
##         timerange, count, interval, starttime, node=ALL(optional)
##
##     2. Summary for a selected node
##
##         timerange, count, interval, starttime, node=SINGLE, type
##
## Author: exuexie 23/07/2010
##
## Changes:
##        eavidat 19/04/11 : 4G support
##=============================================================================

#DEFINE_CONSTANTS()
#set($time = $ApplicationMethods.returnAggregateViewType(${timerange}))
#set($errTablesToUseInQuery = $techPackTables.getErrTables())
#set($sucTablesToUseInQuery = $techPackTables.getSucTables())

	#if($timerange == "TR_4")
		#EVENT_VOLUME_SELECT_ADJUSTED_TIME($type $tzOffsetInMinutes)
	#else
    	#EVENT_VOLUME_SELECT($type)
    #end
    from
    (select
        tmp_st
        ,EVENT_ID
        #if($useAggregationTables)
            ,sum(NO_OF_ERRORS)
        #else
            ,count(*)
        #end
    from
        #if($useAggregationTables)
            #REPLACE_RAW_VIEW_WITH_RAW_TABLES_AND_SPECIFY_COLUMNS($errTablesToUseInQuery "err" $columnsToIncludeInAggViewErr)
        #else
            #REPLACE_RAW_VIEW_WITH_RAW_TABLES_WITH_TAC_EXCLUSION_SPECIFY_COLUMNS($errTablesToUseInQuery "err" $columnsToIncludeInRAWView)
        #end
        ,
        #GET_CHART_TIMES($starttime $endtime $interval)
    where
        DATETIME_ID >= tmp_st
        and DATETIME_ID < tmp_et
        #if($useAggregationTables)
            #if($isTypeNode)
                and #GET_COLUMNS_WHERE($columns)
            #end
            and #GET_DATETIME_RANGE()
        #end
    group by
        tmp_st
        ,EVENT_ID
    )as err (
        TS,
        EVENT_ID,
        NO_OF_ERRORS)
    full outer join
    (select 
        tmp_st
        ,EVENT_ID
        #if($useAggregationTables)
            ,sum(NO_OF_SUCCESSES)
        #else
            ,count(*)
        #end
    from
        #if($useAggregationTables)
            #REPLACE_RAW_VIEW_WITH_RAW_TABLES_AND_SPECIFY_COLUMNS($sucTablesToUseInQuery "suc" $columnsToIncludeInAggViewSuc)
        #else
            #REPLACE_RAW_VIEW_WITH_RAW_TABLES_WITH_TAC_EXCLUSION_SPECIFY_COLUMNS($sucTablesToUseInQuery "suc" $columnsToIncludeInRAWView)
        #end
        ,
        #GET_CHART_TIMES($starttime $endtime $interval)
    where
        DATETIME_ID >= tmp_st
        and DATETIME_ID < tmp_et
        #if($useAggregationTables)
            #if($isTypeNode)
                and #GET_COLUMNS_WHERE($columns)
            #end
            and #GET_DATETIME_RANGE()
        #end
    group by
        tmp_st
        ,EVENT_ID
    ) as suc(
        TS,
        EVENT_ID,
        NO_OF_SUCCESSES)
    on(
        #GET_JOIN("suc" "err" ["TS", "EVENT_ID"])
    )
    #if(${type})
    full outer join
    (select
        tmp_st
        ,count(distinct(IMSI))
    from
        #if($isTypeNode)
            #if ($timerange == "TR_4")
                #REPLACE_RAW_VIEW_WITH_RAW_TABLES_AND_FILTER_COLUMNS_WITH_TAC_EXCLUSION_SPECIFY_COLUMNS_WEEK($errTablesToUseInIMSICount "sub" $columns $columnsToIncludeInIMSICountOneWeek)
            #else
                #REPLACE_RAW_VIEW_WITH_RAW_TABLES_AND_FILTER_COLUMNS_WITH_TAC_EXCLUSION_SPECIFY_COLUMNS($errTablesToUseInIMSICount "sub" $columns $columnsToIncludeInIMSICount)
            #end
        #else
            #if ($timerange == "TR_4")
                #REPLACE_RAW_VIEW_WITH_RAW_TABLES_WITH_TAC_EXCLUSION_SPECIFY_COLUMNS_WEEK($errTablesToUseInIMSICount "sub" $columnsToIncludeInIMSICountOneWeek)
            #else
                #REPLACE_RAW_VIEW_WITH_RAW_TABLES_WITH_TAC_EXCLUSION_SPECIFY_COLUMNS($errTablesToUseInIMSICount "sub" $columnsToIncludeInIMSICount)
            #end
        #end
        ,
        #GET_CHART_TIMES($starttime $endtime $interval)
    where
        #if ($timerange == "TR_4")
     		LOCAL_DATE_ID >= tmp_st
        	and LOCAL_DATE_ID < tmp_et
     	#else
        	DATETIME_ID >= tmp_st
        	and DATETIME_ID < tmp_et
        #end
    group by
        tmp_st
    ) as sub(
        TS
            ,NO_OF_TOTAL_ERR_SUBSCRIBERS
        )
    on(
        #GET_MULTI_JOIN(["suc","err"] "sub" ["TS"])
    )
    #end
    left outer join
        (
        select EVENT_ID from dc.DIM_E_SGEH_EVENTTYPE
            union all
        select EVENT_ID from dc.DIM_E_LTE_EVENTTYPE
        )etref
    on(
        etref.EVENT_ID = isnull(suc.EVENT_ID, err.EVENT_ID)
    )
    group by
        TS
    order by
        TS
        