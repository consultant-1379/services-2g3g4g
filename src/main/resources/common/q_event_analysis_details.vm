##=============================================================================
##
## Event analysis: detailed events data
## -----------------------------------
##
## List events for subscriber, network etc
##
## type : one of {IMSI, SGSN, BSC, CELL, APN, TAC, MSISDN}
##
## useTACExclusion : true if the query should exclude TACs in the EXCLUSIVE_TAC group
##
##  if groupname is set then the type that's set is used as the group type
##         IMSI: search by GROUP_NAME from IMSI GROUP table
##         APN: search by GROUP_NAME from APN GROUP
##         TAC: search by GROUP_NAME from TAC group
##
##
## key : one of {SUC, ERR, TOTAL}
##
## NOTE: For subscriber session management, All the TACs will be considered. i.e, no blacklist TACs here
##
##=============================================================================

#DEFINE_CONSTANTS()
#SET_GROUP_TYPE($type)

#set($useNonLteTables=true)
#set($useLteTables=true)
#set($lteTableList=$TECH_PACK_LIST.getTechPack($ApplicationConstants.EVENT_E_LTE_TPNAME).getRawErrTables())
#set($sgehTableList=$TECH_PACK_LIST.getTechPack($ApplicationConstants.EVENT_E_SGEH_TPNAME).getRawErrTables())

#if(${type}==$TYPE_IMSI)
    #set($columns=[$IMSI])

    #if(!${groupDefinitions})
        #set($lteTableList=$TECH_PACK_LIST.getTechPack($ApplicationConstants.EVENT_E_LTE_TPNAME).getRawTables())
    #set($sgehTableList=$TECH_PACK_LIST.getTechPack($ApplicationConstants.EVENT_E_SGEH_TPNAME).getRawTables())
    #end
#elseif(${type}==$TYPE_MSISDN)

    #if(!${groupDefinitions})
           #set($lteTableList=$TECH_PACK_LIST.getTechPack($ApplicationConstants.EVENT_E_LTE_TPNAME).getRawTables())
    #set($sgehTableList=$TECH_PACK_LIST.getTechPack($ApplicationConstants.EVENT_E_SGEH_TPNAME).getRawTables())
    #end
#elseif(${type}==$TYPE_SGSN)
    #set($columns=[$SGSN])
#elseif(${type}==$TYPE_BSC)
    #set($useLteTables=true)
    #set($columns=[$RAT,$VENDOR,$BSC])
#elseif(${type}==$TYPE_CELL)
        #set($columns=[$RAT,$VENDOR,$BSC,$CELL])
    #if(${RAT_VALUE}=="2")
        #set($useNonLteTables=false)
    #else
        #set($useLteTables=true)
    #end
#elseif(${type}==$TYPE_APN)
    #set($columns=[$APN])
#elseif(${type}==$TYPE_TAC)
    #set($columns=[$TAC])
#elseif(${type}==$TYPE_PTMSI)
    #set($columns=[$PTMSI])
    ##PTMSI is not valid in 4G network - verified by Vasco (systems)
    #set($useLteTables=false)
#end

#if(${groupDefinitions})
#set($groupDef = $groupDefinitions.get($groupType))
#set($groupTable = $groupDef.getTableName())
#set($groupnameColumn = $groupDef.getGroupNameColumn())
#set($joinKeys = $groupDef.getGroupKeys())
#set($isgroup=true)
#else
#set($isgroup=false)
#end

#set($deactivateEventID = "4")
#macro(RAWVIEW_QUERY_FOR_EVENT_ANALYSIS $tablesToUseInQuery)
    ##new function to be used to replace raw view with raw tables
    ,(
        #foreach ($rawtable in $tablesToUseInQuery)
            select
                *
            from dc.$rawtable where
            ##this if...else..block only apply to this template
            ##for other templates, it should be different
            #if($isgroup==false&&(${type} != $ApplicationConstants.TYPE_MAN&&${type} != $TYPE_MSISDN))
                #GET_COLUMNS_WHERE_BY_TABLE($rawtable $columns)
                #AND_DATETIME_RANGE()
            #else
                #GET_DATETIME_RANGE()
            #end

            #if($useTACExclusion && $type!=$TYPE_IMSI)
                ##only exclude TACs if the group is NOT the EXCLUSIVE_TAC group
                ## and an actual TAC is NOT explicitly requested
                and #GET_TAC_EXCLUSION()
            #end
            #if($velocityCount < $tablesToUseInQuery.size())
                    union all
            #end
        #end
    ) as rawview
#end

#macro(RAWVIEW_QUERY_FOR_EVENT_ANALYSIS_WEEK $tablesToUseInQuery)
    ##new function to be used to replace raw view with raw tables
    ,(
        #foreach ($rawtable in $tablesToUseInQuery)
            select
                *
            from dc.$rawtable where
            ##this if...else..block only apply to this template
            ##for other templates, it should be different
            #if($isgroup==false&&(${type} != $ApplicationConstants.TYPE_MAN&&${type} != $TYPE_MSISDN))
                #GET_COLUMNS_WHERE_BY_TABLE($rawtable $columns)
                and #GET_DATE_RANGE_LOCAL()
            #else
                #GET_DATE_RANGE_LOCAL()
            #end

            #if($useTACExclusion && $type!=$TYPE_IMSI)
                ##only exclude TACs if the group is NOT the EXCLUSIVE_TAC group
                ## and an actual TAC is NOT explicitly requested
                and #GET_TAC_EXCLUSION()
            #end
            #if($velocityCount < $tablesToUseInQuery.size())
                    union all
            #end
        #end
    ) as rawview
#end

#macro (WHERE_ADDON_FOR_EVENT_ANALYSIS)
    #if(((!$eventID) && ("$!eventID" == ""))||($isgroup==false&&$type==$TYPE_IMSI))
        and rawview.EVENT_ID is not null
    #else
        and rawview.EVENT_ID #FORMAT_EVENT_IDS_FOR_IN($eventID)
    #end
    #if($isgroup)
        and #GET_JOIN("rawview" "groupref" $joinKeys)
        and $groupnameColumn = :$ApplicationConstants.GROUP_NAME_PARAM
    #elseif(${type} == $TYPE_MSISDN)
        and #GET_JOIN("rawview" "imsiMap" ["IMSI"])
        and imsiMap.MSISDN = :$ApplicationConstants.MSISDN_PARAM.toUpperCase()
    #end

#end

#macro(EVENT_ANALYSIS_QUERY $networkType $tablesToUseInQuery)
(
    #EVENT_ANALYSIS_SELECT($isgroup $type $networkType)

    #EVENT_ANALYSIS_FROM($isgroup $networkType $groupTable)
    #if ($timerange == "TR_4")
    #RAWVIEW_QUERY_FOR_EVENT_ANALYSIS_WEEK($tablesToUseInQuery)
    #else
    #RAWVIEW_QUERY_FOR_EVENT_ANALYSIS($tablesToUseInQuery)
    #end

    #EVENT_ANALYSIS_WHERE($type $networkType)
    #WHERE_ADDON_FOR_EVENT_ANALYSIS()
)
#end

select

    #RAW_EVENT_ANALYSIS_COLUMNS_WITH_SYSTEM_COLUMNS_HANDLED($count $isgroup $type)

from (
#if($sgehTableList.size() > 0 && $useNonLteTables)
    #EVENT_ANALYSIS_QUERY( $ApplicationConstants.SGEH $sgehTableList)
#end
#if($lteTableList.size() > 0 && $useLteTables)
    #if($sgehTableList.size() > 0 && $useNonLteTables)
        union all
    #end
    #EVENT_ANALYSIS_QUERY ($ApplicationConstants.LTE $lteTableList)
#end
)
EVENT_ANALYSIS_RESULT
order by EVENT_ANALYSIS_RESULT.DATETIME_ID desc