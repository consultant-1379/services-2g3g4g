##
## Event Analysis Summary by Manufacturer (flow in UI is from TAC ranking - TAC drilldown)
##
## Description:
##
##  Event Analysis Summary by Manufacturer (flow in UI is from TAC ranking - TAC drilldown)
##
## Parameter:
##
## timerange : one of { TR_1, TR_2, TR_3, TR_4}
##
##     TR_1 : query against raw events
##     TR_2 : query against 1min agg
##     TR_3 : query against 15min aggR
##     TR_4 : query against daily agg
##
## Author : eriwals 31/03/2011
##
#DEFINE_CONSTANTS()
#set($agg_t="EVENT_E_SGEH_MANUF_TAC_EVENTID")
#set($agg_t_lte="EVENT_E_LTE_MANUF_TAC_EVENTID")
#set($time = $ApplicationMethods.returnAggregateViewType($timerange))
#set($columnsToSelect=["EVENT_ID","IMSI","TAC"])

#set($errview = "dc.${agg_t}_ERR$time")
#set($errview_lte = "dc.${agg_t_lte}_ERR$time")
#set($sucview = "dc.${agg_t}_SUC$time")
#set($sucview_lte = "dc.${agg_t_lte}_SUC$time")
#set($subview = "dc.EVENT_E_SGEH_ERR_RAW")
#set($subview_lte = "dc.EVENT_E_LTE_ERR_RAW")

BEGIN

if exists (select 1 from dc.DIM_E_SGEH_TAC where MANUFACTURER = :$ApplicationConstants.TYPE_MAN) then
    #if($csv == true)
        SET TEMPORARY OPTION Temp_Extract_Name1 = 'csvFileName' ;
    #end
    select
        :$ApplicationConstants.TYPE_MAN as SYS_COL_MANUFACTURER,
        isnull(etref.EVENT_ID, lteetref.EVENT_ID) as SYS_COL_EVENT_ID,
        isnull(etref.EVENT_ID_DESC, lteetref.EVENT_ID_DESC) as EVENT_ID_DESC,
        sum(isnull(NO_OF_ERRORS, 0)) as NO_OF_ERRORS,
        sum(isnull(NO_OF_SUCCESSES,0)) as NO_OF_SUCCESSES,
        NO_OF_ERRORS+NO_OF_SUCCESSES as OCCURRENCES,
       	#CALCULATE_KPI_RATIO() as SUCCESS_RATIO,
        max(isnull(NO_OF_TOTAL_ERR_SUBSCRIBERS,0)) as NO_OF_TOTAL_ERR_SUBSCRIBERS

    from
        (select
            EVENT_ID,
            sum(NO_OF_ERRORS) as NO_OF_ERRORS
        from
            $errview
        where
            MANUFACTURER = :$ApplicationConstants.TYPE_MAN
            and #GET_DATETIME_RANGE()
            #if(${useTACExclusion})
            and #GET_TAC_EXCLUSION_BY_TABLE($errview)
            #end
        group by
            EVENT_ID

            union all

        select
            EVENT_ID,
            sum(NO_OF_ERRORS) as NO_OF_ERRORS
        from
            $errview_lte
        where
            MANUFACTURER = :$ApplicationConstants.TYPE_MAN
            and #GET_DATETIME_RANGE()
            #if(${useTACExclusion})
            and #GET_TAC_EXCLUSION_BY_TABLE($errview_lte)
            #end
        group by
            EVENT_ID
        ) as err(EVENT_ID, NO_OF_ERRORS)
        full outer join
        (select
            EVENT_ID,
            sum(NO_OF_SUCCESSES) as NO_OF_SUCCESSES
        from
            $sucview
        where
            MANUFACTURER = :$ApplicationConstants.TYPE_MAN
            and #GET_DATETIME_RANGE()
            #if(${useTACExclusion})
            and #GET_TAC_EXCLUSION_BY_TABLE($sucview)
            #end
        group by
            EVENT_ID

            union all

        select
            EVENT_ID,
            sum(NO_OF_SUCCESSES) as NO_OF_SUCCESSES
        from
            $sucview_lte
        where
            MANUFACTURER = :$ApplicationConstants.TYPE_MAN
            and #GET_DATETIME_RANGE()
            #if(${useTACExclusion})
            and #GET_TAC_EXCLUSION_BY_TABLE($sucview_lte)
            #end
        group by
            EVENT_ID
        ) as suc(EVENT_ID, NO_OF_SUCCESSES)
        on(
            #GET_JOIN("suc" "err" ["EVENT_ID"])
        )
        full outer join
        (select
            EVENT_ID,
            count(distinct(IMSI))
        from
            (select
                EVENT_ID,
                IMSI
            from
                $subview temp_sub,
                dc.DIM_E_SGEH_TAC tacref
            where
                temp_sub.TAC = tacref.TAC
                and tacref.MANUFACTURER = :$ApplicationConstants.TYPE_MAN
                and
                #if ($timerange=="TR_4")
                    #GET_DATE_RANGE_LOCAL()
                #else
                    #GET_DATETIME_RANGE()
                #end
                #if(${useTACExclusion})
                    and temp_sub.TAC not in (select TAC from dc.GROUP_TYPE_E_TAC where GROUP_NAME = 'EXCLUSIVE_TAC')
                #end
            union
            select
                EVENT_ID,
                IMSI
            from
                $subview_lte temp_sub_lte,
                dc.DIM_E_SGEH_TAC tacref
            where
                temp_sub_lte.TAC = tacref.TAC
                and tacref.MANUFACTURER = :$ApplicationConstants.TYPE_MAN
                and
                #if ($timerange=="TR_4")
                    #GET_DATE_RANGE_LOCAL()
                #else
                    #GET_DATETIME_RANGE()
                #end
                #if(${useTACExclusion})
                    and temp_sub_lte.TAC not in (select TAC from dc.GROUP_TYPE_E_TAC where GROUP_NAME = 'EXCLUSIVE_TAC')
                #end
            ) as temp_sub(EVENT_ID, IMSI)
                group by
                    EVENT_ID
        ) as sub(EVENT_ID, NO_OF_TOTAL_ERR_SUBSCRIBERS)
        on(
            #GET_MULTI_JOIN(["suc","err"] "sub" ["EVENT_ID"])
        )
        left outer join
            dc.DIM_E_SGEH_EVENTTYPE etref
        on(
            isnull(suc.EVENT_ID, err.EVENT_ID, sub.EVENT_ID) = etref.EVENT_ID
        )
        left outer join
            dc.DIM_E_LTE_EVENTTYPE lteetref
        on(
            isnull(suc.EVENT_ID, err.EVENT_ID, sub.EVENT_ID) = lteetref.EVENT_ID
        )
    group by
        etref.EVENT_ID,
        lteetref.EVENT_ID,
        etref.EVENT_ID_DESC,
        lteetref.EVENT_ID_DESC
    having
        SYS_COL_EVENT_ID between 0 and 255    ##EVENT_ID is a tinyint in database
    order by
        NO_OF_ERRORS
    desc
else
    #if($csv == true)
        SET TEMPORARY OPTION Temp_Extract_Name1 = 'csvFileName' ;
    #end
    select
        :$ApplicationConstants.TYPE_MAN as SYS_COL_MANUFACTURER,
        isnull(etref.EVENT_ID, lteetref.EVENT_ID) as SYS_COL_EVENT_ID,
        isnull(etref.EVENT_ID_DESC, lteetref.EVENT_ID_DESC) as EVENT_ID_DESC,
        sum(isnull(NO_OF_ERRORS, 0)) as NO_OF_ERRORS,
        sum(isnull(NO_OF_SUCCESSES,0)) as NO_OF_SUCCESSES,
        NO_OF_ERRORS+NO_OF_SUCCESSES as OCCURRENCES,
        #CALCULATE_KPI_RATIO() as SUCCESS_RATIO,
        max(isnull(NO_OF_TOTAL_ERR_SUBSCRIBERS,0)) as NO_OF_TOTAL_ERR_SUBSCRIBERS

    from
        (select
            EVENT_ID,
            sum(NO_OF_ERRORS) as NO_OF_ERRORS
        from
            $errview
        where
            TAC = :$ApplicationConstants.TYPE_MAN
            and #GET_DATETIME_RANGE()
            #if(${useTACExclusion})
            and #GET_TAC_EXCLUSION_BY_TABLE($errview)
            #end
        group by
            EVENT_ID

            union all

        select
            EVENT_ID,
            sum(NO_OF_ERRORS) as NO_OF_ERRORS
        from
            $errview_lte
        where
            TAC = :$ApplicationConstants.TYPE_MAN
            and #GET_DATETIME_RANGE()
            #if(${useTACExclusion})
            and #GET_TAC_EXCLUSION_BY_TABLE($errview_lte)
            #end
        group by
            EVENT_ID
        ) as err(EVENT_ID, NO_OF_ERRORS)
        full outer join
        (select
            EVENT_ID,
            sum(NO_OF_SUCCESSES) as NO_OF_SUCCESSES
        from
            $sucview
        where
            TAC = :$ApplicationConstants.TYPE_MAN
            and #GET_DATETIME_RANGE()
            #if(${useTACExclusion})
            and #GET_TAC_EXCLUSION_BY_TABLE($sucview)
            #end
        group by
            EVENT_ID

            union all

        select
            EVENT_ID,
            sum(NO_OF_SUCCESSES) as NO_OF_SUCCESSES
        from
            $sucview_lte
        where
            TAC = :$ApplicationConstants.TYPE_MAN
            and #GET_DATETIME_RANGE()
            #if(${useTACExclusion})
            and #GET_TAC_EXCLUSION_BY_TABLE($sucview_lte)
            #end
        group by
            EVENT_ID
        ) as suc(EVENT_ID, NO_OF_SUCCESSES)
        on(
            #GET_JOIN("suc" "err" ["EVENT_ID"])
        )
        full outer join
        (select
            EVENT_ID,
            count(distinct(IMSI))
        from
            (select
                EVENT_ID,
                IMSI
            from
                $subview temp_sub
            where
                temp_sub.TAC = :$ApplicationConstants.TYPE_MAN
                and
                #if ($timerange=="TR_4")
                    #GET_DATE_RANGE_LOCAL()
                #else
                    #GET_DATETIME_RANGE()
                #end
                #if(${useTACExclusion})
                    and temp_sub.TAC not in (select TAC from dc.GROUP_TYPE_E_TAC where GROUP_NAME = 'EXCLUSIVE_TAC')
                #end
            union
            select
                EVENT_ID,
                IMSI
            from
                $subview_lte temp_sub_lte
            where
                temp_sub_lte.TAC = :$ApplicationConstants.TYPE_MAN
                and
                #if ($timerange=="TR_4")
                    #GET_DATE_RANGE_LOCAL()
                #else
                    #GET_DATETIME_RANGE()
                #end
                #if(${useTACExclusion})
                    and temp_sub_lte.TAC not in (select TAC from dc.GROUP_TYPE_E_TAC where GROUP_NAME = 'EXCLUSIVE_TAC')
                #end
            ) as temp_sub(EVENT_ID, IMSI)
                group by
                    EVENT_ID
        ) as sub(EVENT_ID, NO_OF_TOTAL_ERR_SUBSCRIBERS)
        on(
            #GET_MULTI_JOIN(["suc","err"] "sub" ["EVENT_ID"])
        )
        left outer join
            dc.DIM_E_SGEH_EVENTTYPE etref
        on(
            isnull(suc.EVENT_ID, err.EVENT_ID, sub.EVENT_ID) = etref.EVENT_ID
        )
        left outer join
            dc.DIM_E_LTE_EVENTTYPE lteetref
        on(
            isnull(suc.EVENT_ID, err.EVENT_ID, sub.EVENT_ID) = lteetref.EVENT_ID
        )
    group by
        etref.EVENT_ID,
        lteetref.EVENT_ID,
        etref.EVENT_ID_DESC,
        lteetref.EVENT_ID_DESC
    having
        SYS_COL_EVENT_ID between 0 and 255    ##EVENT_ID is a tinyint in database
    order by
        NO_OF_ERRORS
    desc
end if;

END